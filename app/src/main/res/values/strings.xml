<resources>
    <string name="app_name">SampleCompose</string>
    <string name="title_activity_main2">MainActivity2</string>
    <string name="happy_birthday_text">Happy Birthday Reza!</string>
    <string name="signature_text">From Penny</string>
    <string name="title_activity_practice_compose">PracticeComposeActivity</string>
    <string name="title">Jetpack Compose tutorial</string>

    <string name="text_second">JJetpack Compose is a modern toolkit for building native Android UI. Compose simplifies and
        accelerates UI development on Android with less code, powerful tools, and intuitive Kotlin APIs.</string>

    <string name="text_third">In this tutorial, you build a simple UI component with declarative functions.
        You call Compose functions to say what elements you want and the Compose compiler does the rest.
        Compose is built around Composable functions. These functions let you define your app\'s UI programmatically because they let you describe
        how it should look and provide data dependencies, rather than focus on the process of the UI\'s construction, such as initializing an
        element and then attaching it to a parent. To create a Composable function, you add the @Composable annotation to the function name..</string>
    <string name="title_activity_dice_roller">DiceRollerActivity</string>
    <string name="roll">Roll</string>
    <string name="title_activity_calculator">CalculatorActivity</string>
    <string name="calculate_tip">Calculate Tip</string>
    <string name="bill_amount">Bill Amount</string>
    <string name="tip_amount">Tip Amount: %s</string>
    <string name="title_activity_button_types08">ButtonTypes08Activity</string>
    <string name="reza_karimnia">reza karimnia</string>
    <string name="title_activity_lazy_row_and_column16">LazyRowAndColumn16Activity</string>
    <string name="title_activity_lazy_column_with_image17">LazyColumnWithImage17Activity</string>

</resources>